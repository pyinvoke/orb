version: 2.1


orbs:
  python: circleci/python@1.3.2


executors:
  # Basically extending what the python orb's executor does:
  # - s/tag/version/
  # - default to 3.6, not 3.8 or w/e
  # - set common environment vars
  default:
    parameters:
      version:
        type: string
        default: "3.6"
    docker:
      - image: cimg/python:<< parameters.version >>
    environment:
      TERM: screen-256color


commands:
  setup:
    steps:
      - checkout
      # This is worth using over a vanilla invocations task for 2 reasons:
      # - kinda hard to use invocations if it's not installed yet...
      # - the python orb is fully integrated with Circle's caching stuff
      - python/install-packages:
          # For now, we expect most Pythons 3.6-3.9+ to be happy with the
          # same pile of dependencies, so this lets us reuse the cache
          # across matrix cells.
          include-python-in-cache-key: false
          pre-install-steps:
            # This must occur here and not as a regular step; otherwise
            # cache loading stomps all over it and you get broken pip.
            - run: pip install pip==21.0.1
          pkg-manager: pip
          pip-dependency-file: dev-requirements.txt
  debug:
    steps:
      - run:
          name: Debug hold...
          # Sleep for a very long time on failure, if opt-in env var set.
          # Necessary to keep circleci cli from nuking its containers :weary:
          # TODO: some non super nested way to get actual python version in use
          command: "if test -n \"$DEBUG\"; then echo 'docker exec -it $(docker container ls --filter ancestor=cimg/python:3.6 --format \"{{.ID}}\") bash'; sleep 18000; fi"
          when: on_fail
          no_output_timeout: 5h


jobs:

  test:
    parameters:
      version:
        type: string
    executor:
      name: default
      version: "<< parameters.version >>"
    steps:
      - setup
      - run: inv test
      - debug

  coverage:
    executor: default
    steps:
      - setup
      - run: inv coverage --codecov
      - debug

  lint:
    executor: default
    steps:
      - setup
      - run: flake8
      - debug

  format:
    executor: default
    steps:
      - setup
      - run: inv blacken --check --diff
      - debug

  test-release:
    executor: default
    steps:
      - setup
      - run:
          command: inv release.all --dry-run
      - debug
